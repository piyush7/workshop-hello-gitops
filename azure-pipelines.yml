# Starter pipeline

# Start with a minimal pipeline that you can customize to build and deploy your code.
# Add steps that build, run tests, deploy, and more:
# https://aka.ms/yaml

trigger:
- master

pool:
  vmImage: ubuntu-latest


steps:
- checkout: self
  persistCredentials: true
  clean: true

- script: |
    echo Add other tasks to build, test, and deploy your project.
    echo See https://aka.ms/yaml
  displayName: 'Run a multi-line script'
- task: KubectlInstaller@0
  inputs:
    kubectlVersion: 'latest'
# - task: KubernetesManifest@0
#   inputs:
#     action: 'deploy'
#     kubernetesServiceConnection: 'gke-tap-sincandela'
#     namespace: 'nginx'
#     manifests: 'nginx.yaml'
- task: Kubernetes@1
  displayName: 'Kubernetes Login'
        # This is needed to run kubectl command from bash.
  inputs:
    connectionType: 'Kubernetes Service Connection'
    kubernetesServiceEndpoint: 'gke-tap-sincandela'
    command: 'login'
- task: Bash@3
  displayName: Downloading pivnet and KP cli  
  inputs:
    targetType: 'inline'
    # kubernetesServiceConnection: 'gke-tap-sincandela'
    script: |
      kubectl get nodes
      curl -L  https://github.com/pivotal-cf/pivnet-cli/releases/download/v3.0.1/pivnet-linux-amd64-3.0.1 -o pivnet 
      ls -larth
       chmod u+x pivnet
       ./pivnet login --api-token  $(pivnet-token)
       #pivnet version 
       ./pivnet download-product-files --product-slug='build-service' --release-version='1.4.2' --product-file-id=1082452
        mv kp-linux-0.4.2 kp
        chmod u+x kp
       # ./kp version
       #./kp image list -n dev5
- task: Bash@3
  displayName:  Check and create image
  inputs:
    targetType: 'inline'
    script: |
      git config --global user.email "piyush.katira.7@gmail.com"
      git config --global user.name "Piyush Katira"
      git checkout master
      ./kp image list -n dev5  | grep 'hello-gitops'
      if [ $? == 0 ] 
        then 
        echo "Image is present"
        GIT_COMMIT=`git rev-parse HEAD`
        echo $GIT_COMMIT
        ./kp image patch hello-gitops --git-revision $GIT_COMMIT -n dev5 -w
        IMAGE_DIGEST=`./kp build list hello-gitops  -n dev5 | grep SUCCESS | tail -1 | awk '{print $(3)}' | cut -d ':' -f2`
        echo $IMAGE_DIGEST
      else
        ./kp image create hello-gitops --git https://github.com/piyush7/workshop-hello-gitops --git-revision master -t harbor.tanzu-demo.app/go-app/build-service/hello-gitops -w -n dev5
      fi
      cp kustomize/base/kustomization.yaml.template kustomize/base/kustomization.yaml
      sed -i "s/IMAGE_DIGEST/$IMAGE_DIGEST/g" kustomize/base/kustomization.yaml
- task: Bash@3
  displayName: Commit and push
  inputs:
    targetType: 'inline'
    script:  |     
      git commit -am "AZ devops updated pipeline with commit: `$IMAGE_TAG` [skip ci]"
      git push
  
            
