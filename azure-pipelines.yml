# Starter pipeline

# Start with a minimal pipeline that you can customize to build and deploy your code.
# Add steps that build, run tests, deploy, and more:
# https://aka.ms/yaml

trigger:
- master

pool:
  vmImage: ubuntu-latest

steps:
- script: echo Hello, world!
  displayName: 'Run a one-line script'

- script: |
    echo Add other tasks to build, test, and deploy your project.
    echo See https://aka.ms/yaml
  displayName: 'Run a multi-line script'
- task: KubectlInstaller@0
  inputs:
    kubectlVersion: 'latest'
# - task: KubernetesManifest@0
#   inputs:
#     action: 'deploy'
#     kubernetesServiceConnection: 'gke-tap-sincandela'
#     namespace: 'nginx'
#     manifests: 'nginx.yaml'
- task: Kubernetes@1
  displayName: 'Kubernetes Login'
        # This is needed to run kubectl command from bash.
  inputs:
    connectionType: 'Kubernetes Service Connection'
    kubernetesServiceEndpoint: 'gke-tap-sincandela'
    command: 'login'
- task: Bash@3
  displayName: Downloading pivnet and KP cli
  inputs:
    targetType: 'inline'
    # kubernetesServiceConnection: 'gke-tap-sincandela'
    script: |
      kubectl get nodes
      curl -L  https://github.com/pivotal-cf/pivnet-cli/releases/download/v3.0.1/pivnet-linux-amd64-3.0.1 -o pivnet 
      ls -larth
       chmod u+x pivnet
       ./pivnet login --api-token  $(pivnet-token)
       #pivnet version 
       ./pivnet download-product-files --product-slug='build-service' --release-version='1.4.2' --product-file-id=1082452
        mv kp-linux-0.4.2 kp
        chmod u+x kp
       # ./kp version
        ./kp image list -n dev5
    
